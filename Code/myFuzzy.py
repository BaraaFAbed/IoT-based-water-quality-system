# Fuzzy system simulation through simplefied system - generated by GPT

# Simulation of pH input variable
def categorize_ph(ph):
    if 0 <= ph < 6:
        return "Acidic"
    elif 6 <= ph <= 8:
        return "Neutral"
    elif 8 < ph <= 14:
        return "Basic"
    else:
        raise ValueError("PH value out of range")

# Simulation of TDS input variable
def categorize_tds(tds):
    if 0 <= tds < 100:
        return "Stale"
    elif 100 <= tds < 1000:
        return "Normal"
    elif 1000 <= tds <= 2000:
        return "Salty"
    else:
        raise ValueError("TDS value out of range")

# Simulation of turbidity input variable
def categorize_turbidity(turbidity):
    if 0 <= turbidity < 1.5:
        return "Clear"
    elif 1.5 <= turbidity <= 5:
        return "Cloudy"
    else:
        raise ValueError("Turbidity value out of range")

# Simulation of ORP input variable
def categorize_orp(orp):
    if -1500 <= orp < 200:
        return "Unsuitable"
    elif 200 <= orp <= 1500:
        return "Suitable"
    else:
        raise ValueError("ORP value out of range")

# Function to run the "Fuzzy" system depending on the given inputs. Output will be the simulation of the drinkability output variable varying between 0-100
def runFuzzy(ph, tds, turbidity, orp):
    PH = categorize_ph(ph)
    TDS = categorize_tds(tds)
    Turbidity = categorize_turbidity(turbidity)
    ORP = categorize_orp(orp)

        # Rule Set for 'Dangerous' outcome
    if PH == 'Acidic':
        if TDS in ['Stale', 'Normal', 'Salty']:
            return 100  # Dangerous
    elif PH == 'Basic':
        if TDS in ['Stale', 'Normal', 'Salty']:
            return 100  # Dangerous

    # Rule Set for 'Semi-safe' and 'Safe' outcome
    if PH == 'Neutral':
        if TDS == 'Stale':
            if ORP == 'Suitable':
                if Turbidity == 'Clear':
                    return 0  # Safe
                else:  # Turbidity is Cloudy
                    return 50  # Semi-safe
            else:  # ORP is Unsuitable
                return 50  # Semi-safe
        elif TDS == 'Normal':
            if ORP == 'Suitable':
                if Turbidity == 'Clear':
                    return 0  # Safe
                else:  # Turbidity is Cloudy
                    return 50  # Semi-safe
            else:  # ORP is Unsuitable
                return 50  # Semi-safe
        elif TDS == 'Salty':
            return 50  # Semi-safe